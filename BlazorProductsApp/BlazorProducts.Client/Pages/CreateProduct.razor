@using BlazorProducts.Client.Components.Shared
@using BlazorProducts.Client.Repository
@using Entities.Models
@page "/createProduct"

<h2>Create Product Form</h2>

<EditForm Model="_product" OnValidSubmit="Create" class="card card-body bg-light mt-5">
    <DataAnnotationsValidator />
    @* <ValidationSummary /> *@
    <div class="mb-3 row">
        <label for="name" class="col-md-2 col-form-label">Name:</label>
        <div class="col-md-10">
            <InputText id="name" class="form-control" @bind-Value="_product.Name" />
            <ValidationMessage For="@(() => _product.Name)" />
        </div>
    </div>

    <div class="mb-3 row">
        <label for="supplier" class="col-md-2 col-form-label">Supplier:</label>
        <div class="col-md-10">
            <InputText id="supplier" class="form-control" @bind-Value="_product.Supplier" />
            <ValidationMessage For="@(() => _product.Supplier)" />
        </div>
    </div>

    <div class="mb-3 row">
        <label for="price" class="col-md-2 col-form-label">Price:</label>
        <div class="col-md-10">
            <InputNumber id="price" class="form-control" @bind-Value="_product.Price" />
            <ValidationMessage For="@(() => _product.Price)" />
        </div>
    </div>

    <div class="mb-3 row">
        <label for="image" class="col-md-2 col-form-label">Image:</label>
        <div class="col-md-10">
            <ImageUpload OnChange="AssignImageUrl" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-10"></div>
        <div class="col-md-2 text-right">
            <button type="submit" class="btn btn-success">Create</button>
        </div>
    </div>
</EditForm>
<SuccessNotification @ref="_notification" />

@code {
    [Inject]
    public IProductHttpRepository ProductRepo { get; set; }

    private Product _product = new Product();
    private SuccessNotification _notification;

    private async Task Create()
    {
        await ProductRepo.CreateProduct(_product);
        _notification.Show();
    }
    private void AssignImageUrl(string imgUrl) => _product.ImageUrl = imgUrl;
}

@using BlazorProducts.Client.Repository
@using System.Net.Http.Headers
@using Tewr.Blazor.FileReader
<input type="file" @ref="_input" @onchange="HandleSelected" accept=".jpg, .jpeg, .png" />
@if (ImgUrl != null)
{
    <div>
        <img src="@ImgUrl" style="width:300px" />
    </div>
}

@code {
    private ElementReference _input;
    [Parameter]
    public string ImgUrl { get; set; }
    [Parameter]
    public EventCallback<string> OnChange { get; set; }
    [Inject]
    public IFileReaderService FileReaderService { get; set; }
    [Inject]
    public IProductHttpRepository Repository { get; set; }
    private async Task HandleSelected()
    {
        foreach (var file in await FileReaderService.CreateReference(_input).EnumerateFilesAsync())
        {
            if (file != null)
            {
                var fileInfo = await file.ReadFileInfoAsync();
                using (var ms = await file.CreateMemoryStreamAsync(4 * 1024))
                {
                    var content = new MultipartFormDataContent();
                    content.Headers.ContentDisposition = new ContentDispositionHeaderValue("form-data");
                    content.Add(new StreamContent(ms, Convert.ToInt32(ms.Length)), "image", fileInfo.Name);
                    ImgUrl = await Repository.UploadProductImage(content);
                    await OnChange.InvokeAsync(ImgUrl);
                }
            }
        }
    }
}
